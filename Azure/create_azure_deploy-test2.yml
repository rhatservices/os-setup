---
- name: Get facts of a VM
  hosts: localhost
  connection: local
  become: false
  gather_facts: false

  tasks: 

  - name: Destroy Azure Deploy
    azure_rm_deployment:
      resource_group: myResourceGroup
      name: myDeployment
      state: absent

  # Create or update a template deployment based on an inline template and parameters
  - name: Create Azure Deploy
    azure_rm_deployment:
      resource_group: myResourceGroup
      name: myDeployment
      template:
        $schema: "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
        contentVersion: "1.0.0.0"
        parameters:
          newStorageAccountName:
            type: "string"
            metadata:
              description: "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
          adminUsername:
            type: "string"
            metadata:
              description: "User name for the Virtual Machine."
          adminPassword:
            type: "securestring"
            metadata:
              description: "Password for the Virtual Machine."
          dnsNameForPublicIP:
            type: "string"
            metadata:
              description: "Unique DNS Name for the Public IP used to access the Virtual Machine."
          ubuntuOSVersion:
            type: "string"
            defaultValue: "14.04.2-LTS"
            allowedValues:
              - "12.04.5-LTS"
              - "14.04.2-LTS"
              - "15.04"
            metadata:
              description: >
                           The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version.
                           Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.04."
        variables:
          location: "West US"
          imagePublisher: "Canonical"
          imageOffer: "UbuntuServer"
          OSDiskName: "osdiskforlinuxsimple"
          nicName: "myVMNic"
          addressPrefix: "10.10.0.0/16"
          subnetName: "tjutestsubnet001"
          subnetPrefix: "10.10.0.0/24"
          storageAccountType: "Standard_LRS"
          publicIPAddressName: "myPublicIP"
          publicIPAddressType: "Dynamic"
          vmStorageAccountContainerName: "vhds"
          vmName: "MyUbuntuVM"
          vmSize: "Standard_D1"
          virtualNetworkName: "MyVNET"
          vnetID: "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
          subnetRef: "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
        resources:
          - type: "Microsoft.Storage/storageAccounts"
            name: "[parameters('newStorageAccountName')]"
            apiVersion: "2015-05-01-preview"
            location: "[variables('location')]"
            properties:
              accountType: "[variables('storageAccountType')]"
          - apiVersion: "2015-05-01-preview"
            type: "Microsoft.Network/publicIPAddresses"
            name: "[variables('publicIPAddressName')]"
            location: "[variables('location')]"
            properties:
              publicIPAllocationMethod: "[variables('publicIPAddressType')]"
              dnsSettings:
                domainNameLabel: "[parameters('dnsNameForPublicIP')]"
          - type: "Microsoft.Network/virtualNetworks"
            apiVersion: "2015-05-01-preview"
            name: "[variables('virtualNetworkName')]"
            location: "[variables('location')]"
            properties:
              addressSpace:
                addressPrefixes:
                  - "[variables('addressPrefix')]"
              subnets:
                -
                  name: "[variables('subnetName')]"
                  properties:
                    addressPrefix: "[variables('subnetPrefix')]"
          - type: "Microsoft.Network/networkInterfaces"
            apiVersion: "2015-05-01-preview"
            name: "[variables('nicName')]"
            location: "[variables('location')]"
            dependsOn:
              - "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
              - "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            properties:
              ipConfigurations:
                -
                  name: "ipconfig1"
                  properties:
                    privateIPAllocationMethod: "Dynamic"
                    publicIPAddress:
                      id: "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                    subnet:
                      id: "[variables('subnetRef')]"
          - type: "Microsoft.Compute/virtualMachines"
            apiVersion: "2015-06-15"
            name: "[variables('vmName')]"
            location: "[variables('location')]"
            dependsOn:
              - "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
              - "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            properties:
              hardwareProfile:
                vmSize: "[variables('vmSize')]"
              osProfile:
                computername: "[variables('vmName')]"
                adminUsername: "[parameters('adminUsername')]"
                adminPassword: "[parameters('adminPassword')]"
              storageProfile:
                imageReference:
                  publisher: "[variables('imagePublisher')]"
                  offer: "[variables('imageOffer')]"
                  sku: "[parameters('ubuntuOSVersion')]"
                  version: "latest"
                osDisk:
                  name: "osdisk"
                  vhd:
                    uri: >
                         [concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',
                         variables('OSDiskName'),'.vhd')]
                  caching: "ReadWrite"
                  createOption: "FromImage"
              networkProfile:
                networkInterfaces:
                  -
                    id: "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              diagnosticsProfile:
                bootDiagnostics:
                  enabled: "true"
                  storageUri: "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
      parameters:
        newStorageAccountName:
          value: "{{azure_storage_account}}"
        adminUsername:
          value: devopscle
        adminPassword:
          value: Password1!
        dnsNameForPublicIP:
          value: devopscleazure


